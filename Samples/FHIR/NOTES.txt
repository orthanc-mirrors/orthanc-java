
This sample Java plugin runs a FHIR server based on the HAPI library.
Note that contrarily to the "Basic" and "Dcm4Che" samples that can run
using Java 1.8, this Java plugin requires Java 11.

(1) Make sure to build the C++ plugin:

# cd ../../Plugin/
# mkdir Build
# cd Build
# cmake .. -DCMAKE_BUILD_TYPE=Release
# make -j4


(2) Compile the Java plugin using Maven:

# cd ../../Samples/FHIR
# mvn compile package


(3) Start Orthanc:

On Ubuntu 20.04 or 22.04 (replace "mainline" with the version of the
Java plugin for Orthanc):

# LD_LIBRARY_PATH=/usr/lib/jvm/java-11-openjdk-amd64/lib/server/ \
  ORTHANC_JAVA_VERSION=mainline \
  Orthanc ./configuration.json

IMPORTANT: The DICOMweb plugin must be installed in the current
directory.


(4) Access the FHIR server. For instance, using the FHIRPACK
command-line client (https://gitlab.com/fhirpack/main):

On Ubuntu 20.04:

$ python3.9 -m pip install --user --upgrade pip
$ python3.9 -m pip install --user --upgrade cffi fhirpack

$ fp -s http://localhost:8042/fhir -o "getPatients" -p all -o "gatherSimplePaths id name.family name.given birthDate"
$ fp -s http://localhost:8042/fhir -o "getEndpoints" -p all -o "gatherSimplePaths id address"
$ fp -s http://localhost:8042/fhir -o "getImagingStudies" -p all -o "gatherSimplePaths identifier.value endpoint.reference subject.reference"
